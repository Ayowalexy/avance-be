import crypto from 'crypto'

function decrypt(key, ivCiphertextB64) {
    const ivCiphertext = Buffer.from(ivCiphertextB64, 'base64');
    const iv = ivCiphertext.slice(0, 16);
    const ciphertext = ivCiphertext.slice(16);
    const decipher = crypto.createDecipheriv('aes-256-cbc', key, iv);
    let decryptedData = decipher.update(ciphertext);
    decryptedData = Buffer.concat([decryptedData, decipher.final()]);
    console.log(decryptedData.toString());
}

let data = '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'

decrypt('952edf8560a44c06a6956f0bba032fc1', data);